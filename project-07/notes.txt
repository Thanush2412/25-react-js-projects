Project 07: Modal Popup
=====================

CODE EXPLANATION
---------------

1. Modal.js (Portal Component)
   ```javascript
   function Modal({ isOpen, onClose, title, children }) {
     const modalRef = useRef(null);

     useEffect(() => {
       const handleEscape = (e) => {
         if (e.key === 'Escape') {
           onClose();
         }
       };

       const handleClickOutside = (e) => {
         if (modalRef.current && !modalRef.current.contains(e.target)) {
           onClose();
         }
       };
     }, [isOpen, onClose]);

     return createPortal(
       <div className="modal-backdrop">
         <div className="modal-container" ref={modalRef}>
           {/* Modal content */}
         </div>
       </div>,
       document.body
     );
   }
   ```
   - React Portal implementation
   - Event handling
   - Accessibility features
   - Cleanup management

2. App.js (Main Component)
   ```javascript
   function App() {
     const [isModalOpen, setIsModalOpen] = useState(false);

     const openModal = () => setIsModalOpen(true);
     const closeModal = () => setIsModalOpen(false);

     return (
       <div className="App">
         <button onClick={openModal}>Open Modal</button>
         <Modal isOpen={isModalOpen} onClose={closeModal}>
           {/* Modal content */}
         </Modal>
       </div>
     );
   }
   ```
   - State management
   - Event handling
   - Component composition
   - Modal integration

CONCEPT BREAKDOWN
----------------

1. React Portals
   - Portal creation
   - DOM manipulation
   - Event bubbling
   - Z-index management

2. Event Handling
   - Click outside
   - Escape key
   - Event bubbling
   - Event cleanup

3. Accessibility
   - ARIA attributes
   - Keyboard navigation
   - Focus management
   - Screen reader support

4. Component Composition
   - Modal structure
   - Content injection
   - Props passing
   - State management

IMPLEMENTATION STEPS
-------------------
1. Project Setup
   - Create React app
   - Component structure
   - File organization
   - Dependencies

2. Portal Implementation
   - Portal creation
   - DOM targeting
   - Event handling
   - Cleanup management

3. Modal Component
   - Structure creation
   - Event handling
   - Accessibility
   - Animation

4. Styling Implementation
   - Modal design
   - Animation
   - Responsive design
   - Visual feedback

5. Functionality
   - Open/Close
   - Click outside
   - Escape key
   - Scroll lock

BEST PRACTICES
-------------
1. Portal Usage
   - Proper DOM targeting
   - Event handling
   - Cleanup management
   - Z-index management

2. Accessibility
   - ARIA attributes
   - Keyboard support
   - Focus management
   - Screen reader support

3. Event Handling
   - Event bubbling
   - Cleanup
   - Performance
   - User interaction

4. Component Design
   - Reusability
   - Props management
   - State handling
   - Content injection

KEY FEATURES
-----------
1. Modal Functionality
   - Open/Close
   - Click outside
   - Escape key
   - Scroll lock

2. User Interface
   - Smooth animations
   - Visual feedback
   - Responsive design
   - Clean layout

3. Accessibility
   - Keyboard navigation
   - Screen reader support
   - Focus management
   - ARIA attributes

4. Performance
   - Event cleanup
   - Portal optimization
   - Animation performance
   - State management

LEARNING POINTS
--------------
1. React Portals
   - Portal creation
   - DOM manipulation
   - Event handling
   - Cleanup

2. Event Handling
   - Event bubbling
   - Keyboard events
   - Click events
   - Cleanup

3. Accessibility
   - ARIA attributes
   - Keyboard support
   - Focus management
   - Screen readers

4. Component Design
   - Portal implementation
   - Event handling
   - State management
   - Props passing 